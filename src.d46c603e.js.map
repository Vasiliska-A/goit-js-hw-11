{"version":3,"sources":["js-files/timer.js","index.js"],"names":["refs","inputData","document","getElementById","startButton","querySelector","timerContainer","dataField","dataDays","dataHours","dataMinutes","dataSeconds","Timer","constructor","onTick","intervalID","isActive","start","setInterval","enteredDate","ms","Date","value","getTime","time","convertMs","pad","String","padStart","days","Math","floor","hour","hours","minute","minutes","second","seconds","timer","changeTimerNumbers","textContent","addEventListener","bind"],"mappings":";;;AAaA,MAAMA,EAAO,CACTC,UAAWC,SAASC,eAAe,iBACnCC,YAAaF,SAASG,cAAc,iBACpCC,eAAgBJ,SAASG,cAAc,UACvCE,UAAWL,SAASG,cAAc,UAClCG,SAAUN,SAASG,cAAc,eACjCI,UAAWP,SAASG,cAAc,gBAClCK,YAAaR,SAASG,cAAc,kBACpCM,YAAaT,SAASG,cAAc,mBAOxC,MAAMO,EACFC,aAAY,OAAEC,IACLC,KAAAA,WAAa,KACd,KAAKC,UAAW,EAChB,KAAKF,OAASA,EAGtBG,QACQ,KAAKD,WAIJA,KAAAA,UAAW,EAEXD,KAAAA,WAAaG,YAAY,KACpBC,MAKAC,EALc,IAAIC,KAAKnB,SAASC,eAAe,iBAAiBmB,OACxCC,UACV,IAAIF,KAIlBG,EAAO,KAAKC,UAAUL,GAEvBN,KAAAA,OAAOU,IAEb,MAINE,IAAIJ,GACMK,OAAAA,OAAOL,GAAOM,SAAS,EAAG,KAGpCH,UAAUL,GAgBN,MAAA,CAAES,KARIC,KAAKC,MAAMX,EAHZY,OAWGC,MANDH,KAAKC,MAAOX,EALdY,MADCE,MAYSC,QAJNL,KAAKC,MAAQX,EAPjBY,MADCE,KADEE,KAagBC,QAFfP,KAAKC,MAASX,EATlBY,MADCE,KADEE,IADA,OAoBjB,MAAME,EAAQ,IAAI1B,EAAM,CACpBE,OAAQyB,IAGZ,SAASA,GAAmB,KAAEV,EAAF,MAAQI,EAAR,QAAeE,EAAf,QAAwBE,IAChDrC,EAAKQ,SAASgC,eAAiBX,IAC/B7B,EAAKS,UAAU+B,eAAiBP,IAChCjC,EAAKU,YAAY8B,eAAiBL,IAClCnC,EAAKW,YAAY6B,eAAiBH,IAGrCrC,EAAKI,YAAYqC,iBAAiB,QAASH,EAAMrB,MAAMyB,KAAKJ;;AC5F7D,aAFA,QAAA,oBAEA,QAAA","file":"src.d46c603e.js","sourceRoot":"../src","sourcesContent":["// Напиши скрипт таймера, который ведёт обратный отсчет до определенной даты.\n\n// Если пользователь выбрал дату в прошлом, необходимо показать уведомление \"Please choose a date in the future\".\n// Используй библиотеку sweetalert2.\n// Кнопка должа быть не активна до тех пор, пока пользователь не выбрал дату в будущем.\n// Если выбрана валидная дата и пользователь нажал кнопку - начинается отсчет времени.\n// Скрипт должен вычислять раз в секунду сколько времени осталось до указанной даты и обновлять интерфейс, \n// показывая четыре цифры: дни, часы, минуты и секунды в формате xx: xx: xx: xx.\n\n// Количество дней может состоять из более чем двух цифр.\n// Таймер должен останавливаться когда дошел до конечной даты, то есть 00:00:00:00.\n// Для подсчета значений используй готовую функцию, где ms - разница между конечной и текущей датой в миллисекундах.\n\nconst refs = {\n    inputData: document.getElementById('date-selector'),\n    startButton: document.querySelector('.timer-button'),\n    timerContainer: document.querySelector('.timer'),\n    dataField: document.querySelector('.field'),\n    dataDays: document.querySelector('[data-days]'),\n    dataHours: document.querySelector('[data-hours]'),\n    dataMinutes: document.querySelector('[data-minutes]'),\n    dataSeconds: document.querySelector('[data-seconds]'),\n  \n}\n\n\n\n\nclass Timer  {\n    constructor({ onTick }){\n        this.intervalID = null,\n            this.isActive = false,\n            this.onTick = onTick;\n    }\n\n    start() {\n        if (this.isActive) {\n            return;\n        }\n\n        this.isActive = true;\n\n        this.intervalID = setInterval(() => {\n            const enteredDate = new Date(document.getElementById('date-selector').value);\n            const inputDate = enteredDate.getTime();\n            const currentDate = new Date();\n\n\n            const ms = inputDate - currentDate;\n            const time = this.convertMs(ms);\n\n            this.onTick(time);\n\n        }, 1000);\n\n    }\n\n     pad(value){\n        return String(value).padStart(2, '0');\n    }\n\n     convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n}\n\n\nconst timer = new Timer({\n    onTick: changeTimerNumbers,\n});\n\nfunction changeTimerNumbers({ days, hours, minutes, seconds }) {\n    refs.dataDays.textContent = `${days}`;\n    refs.dataHours.textContent = `${hours}`;\n    refs.dataMinutes.textContent = `${minutes}`;\n    refs.dataSeconds.textContent = `${seconds}`;\n}\n \n refs.startButton.addEventListener('click', timer.start.bind(timer));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// function getUserInputTime() {\n//    const enteredDate = document.getElementById('date-selector').value;\n//     return enteredDate;\n//     console.log(enteredDate); \n// }","import './sass/main.scss';\n// import './js-files/color-switcher'\nimport './js-files/timer'\n// import './js-files/delay-fn'\n// import './js-files/user-state-fn'\n// import './js-files/transaction'\n\n\n\n\n\n\n\n\n\n"]}